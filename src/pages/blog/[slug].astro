---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BasePage from "../../layouts/BasePage.astro";
import { format } from "date-fns";
import Tag from "../../components/Tag.astro";
import "../../styles/content-pages.css";

// static paths generation for "blog/..." pages
export const getStaticPaths = async () => {
  const blogEntries = await getCollection("blog");
  const paths = blogEntries.map((blogEntry) => {
    return {
      params: {
        slug: blogEntry.slug,
      },
      props: {
        blogEntry,
      },
    };
  });

  return paths;
};

type Props = {
  blogEntry: CollectionEntry<"blog">;
};

const { blogEntry } = Astro.props;
const { Content } = await blogEntry.render();
const { title, date, tags } = blogEntry.data;

const formatDate = (date: Date) => format(date, "yyyy. MM. dd.");
---

<BasePage title="Blog">
  <div data-pagefind-body>
    <h1>
      {title}
    </h1>
    <div class="mt-2 mb-20 flex items-center justify-between">
      <div
        class="font-(family-name:--secondary-font) text-[10pt] text-(color:--light-gray) md:text-[12pt]"
        data-pagefind-ignore
        data-pagefind-sort="date"
      >
        {formatDate(date.end)}
      </div>
      <div class="flex justify-end gap-2" data-pagefind-ignore>
        {tags.map((tag) => <Tag label={tag} />)}
      </div>
    </div>
    <Content />
  </div>
</BasePage>
